syntax = "proto3";
import "models.proto";

service SvAccount {
  rpc create(ICreateAccount) returns (OCreateAccount);
  rpc readOne(IReadOneAccount) returns (OReadOneAccount);
  rpc readAll(IReadAllAccount) returns (OReadAllAccount);
  rpc readList(IReadListAccount) returns (OReadListAccount);
}

/* ------------------------------------------------------------------------------------------------------------ */

message IReadAccountFilter {
  repeated ObjectID ids = 1;
  optional bool isActivate = 2;
  map<string, string> identifier = 3;
  map<string, string> property = 4;
  IPeriod createdAt = 5;
}

message IReadAccountSort {
  map<string, Order> identifier = 1;
  map<string, Order> property = 2;
  optional Order createdAt = 3;
  optional Order updatedAt = 4;
}

message IUpdateAccount {
  optional bool isActivate = 1;
  map<string, string> identifier = 2;
  map<string, string> property = 3;
  map<string, IUpdateAccountVerifier> verifier = 4;
  bytes data = 5;
}

message IUpdateAccountVerifier {
  string key = 1;
  string value = 2;
  VerifyMode mode = 3;
}

/* ------------------------------------------------------------------------------------------------------------ */

message ICreateAccount {
  map<string, string> identifier = 1;
  map<string, string> properties = 2;
}

message OCreateAccount {
  Account value = 1;
}

message IReadOneAccount {
  IReadAccountFilter filter = 1;
  IReadAccountSort sort = 2;
}

message OReadOneAccount {
  Account value = 1;
}

message IReadAllAccount {
  IReadAccountFilter filter = 1;
  IReadAccountSort sort = 2;
}

message OReadAllAccount {
  repeated Account list = 1;
}

message IReadListAccount {
  IReadAccountFilter filter = 1;
  IReadAccountSort sort = 2;
  IPager pager = 3;
}

message OReadListAccount {
  int64 page = 1;
  int64 size = 2;
  int64 total = 3;
  repeated Account list = 4;
}
